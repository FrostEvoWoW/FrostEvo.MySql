# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%a %b %d %H:%M:%S %Y')"
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha::$(git rev-parse HEAD)"
        
      - name: Discord Commits
        uses: Sniddl/discord-commits@v1.3
        with:
          webhook: https://discord.com/api/webhooks/963508936760238183/LMav_jRnXcFzXhUpduLmCaUWS7XDzccoGAOT7FId5et1aYBeAVcuA5li6PmBocqu-Ho8
          embed: '{
                "title": "__{{commit.title}}__",
                "description":"
                ```
                Commit: ${{steps.vars.outputs.sha}} \r\n
                Branch: {{ github.context.payload.repository.owner.name }}/{{ github.context.payload.repository.name}}/${{steps.vars.outputs.branch}} \r\n
                Author: {{commit.author.name}} <{{commit.author.email}}> \r\n
                Date: ${{steps.date.outputs.date}}
                ```
                \r\n
                ```{{commit.description}}```
                  "
                  }'